{"version":3,"sources":["components/Nav.jsx","components/AboutBody.jsx","pages/About.jsx","components/TileData.jsx","components/PortfolioBody.jsx","pages/Portfolio.jsx","components/ContactBody.jsx","pages/Contact.jsx","components/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["theme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","useStyles","makeStyles","root","flexGrow","title","ButtonAppBar","classes","navBar","color","textDecoration","ThemeProvider","AppBar","position","Toolbar","Typography","variant","className","to","Button","style","href","target","rel","fontSize","SimpleContainer","Fragment","Container","maxWidth","backgroundColor","marginTop","padding","borderRadius","float","marginRight","width","height","src","alt","component","paddingTop","About","tileData","img","info","url","github","display","flexWrap","justifyContent","overflow","TitlebarGridList","GridList","cellHeight","margin","GridListTile","key","cols","ListSubheader","map","tile","GridListTileBar","subtitle","actionIcon","IconButton","aria-label","paddingRight","Portfolio","large","spacing","ImgMediaCard","Box","m","mx","Card","CardActionArea","Avatar","CardContent","gutterBottom","CardActions","size","Contact","Footer","opacity","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6b23b4a3.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  makeStyles,\n  createMuiTheme,\n  ThemeProvider,\n} from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: \"#f05545\",\n      main: \"#b71c1c\",\n      dark: \"#7f0000\",\n      contrastText: \"#ffffff\",\n    },\n    secondary: {\n      light: \"#62727b\",\n      main: \"#37474f\",\n      dark: \"#102027\",\n      contrastText: \"#ffffff\",\n    },\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function ButtonAppBar() {\n  const classes = useStyles();\n  const navBar = {\n    color: \"white\",\n    textDecoration: \"underline\",\n  };\n  return (\n    <ThemeProvider theme={theme}>\n      <div>\n        <AppBar position=\"relative\" color=\"primary\">\n          <Toolbar>\n            <Typography variant=\"h3\" className={classes.title}>\n              Brad Williams\n            </Typography>\n            <Typography variant=\"h6\" className={classes.title}>\n              <Link to=\"/\">\n                <Button style={navBar}>About</Button>\n              </Link>\n            </Typography>\n            <Typography variant=\"h6\" className={classes.title}>\n              <Link to=\"/Portfolio\">\n                <Button style={navBar}>Portfolio</Button>\n              </Link>\n            </Typography>\n            <Typography variant=\"h6\" className={classes.title}>\n              <Link to=\"/Contact\">\n                <Button style={navBar}>Contact</Button>\n              </Link>\n            </Typography>\n            <div>\n              <a\n                href=\"https://github.com/bread-w\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <Button style={navBar}>\n                  <GitHubIcon fontSize=\"large\" />\n                </Button>\n              </a>\n            </div>\n            <div>\n              <a\n                href=\"https://www.linkedin.com/in/brad-williams-79674253/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <Button style={navBar}>\n                  <LinkedInIcon fontSize=\"large\" />\n                </Button>\n              </a>\n            </div>\n          </Toolbar>\n        </AppBar>\n      </div>\n    </ThemeProvider>\n  );\n}\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\n\nexport default function SimpleContainer() {\n  const bioStyle = {\n    float: \"left\",\n    marginRight: \"20px\",\n    width: \"250px\",\n    height: \"auto\",\n    marginTop: \"10px\",\n    borderRadius: \"5%\",\n  };\n  return (\n    <React.Fragment>\n      <Container\n        maxWidth=\"auto\"\n        style={{\n          backgroundColor: \"rgb(55,71,79, 0.75)\",\n          marginTop: \"20px\",\n          padding: 25,\n          borderRadius: \"1.5%\"\n        }}\n      >\n        <img\n          style={bioStyle}\n          src=\"https://i.imgur.com/7pmQ7Ft.jpg\"\n          alt=\"Brad Williams\"\n        />\n        <Typography\n          variant=\"h5\"\n          component=\"h6\"\n          style={{ color: \"white\", paddingTop: \"10px\" }}\n        >\n          Full stack web developer with 4 years of managing small to medium\n          sized teams between 5 and 30+ members in a startup environment. Former\n          math teacher in an English as a second language classroom with vast\n          experience planning differentiated lessons and activities based on\n          individualized student data. Reliable, consistent and amiable as both\n          a teammate and leader, preferring an action-oriented approach in both\n          professional and personal life. Familiar with fast paced work\n          environments, and meeting deadlines with no sacrifice to the final\n          quality of deliverables, be it a product or service. Fluent in both\n          English and Spanish with experience working in both languages.\n          <br></br>\n          <br></br>\n          Recently transitioned to web development to add technical expertise to\n          an established set of practical business acumen, managerial\n          experience, and interpersonal skills. Fascinated with planning and\n          iterative development, with a passion for creating practical and\n          unique web based applications.\n          <br></br>\n          <br></br>\n          Earned a certificate in Full Stack Web Development through Georgia\n          Tech, with a primary focus in Javascript applications, REST APIs,\n          Node, MySQL, MongoDB and React. Easily integrates into existing teams\n          and quickly learns the established best practices with the necessary\n          developmental and project management tools.\n        </Typography>\n      </Container>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport AboutBody from \"../components/AboutBody\";\n\nconst About = () => {\n  return (\n    <div>\n      <AboutBody />\n    </div>\n  );\n};\n\nexport default About;\n","const tileData = [{\n  img: 'https://i.imgur.com/UQW4MRc.png',\n  title: 'PokeTrader',\n  info: 'The best tool for keeping track of your unique pokemon card collection. Built using Node.js, and MySQL.',\n  url: 'https://gt-poketrader.herokuapp.com/',\n  github: 'https://github.com/bread-w/poketrader-app'\n},\n{\n  img: 'https://i.imgur.com/zHJX2sv.png',\n  title: 'freezER',\n  info: 'The best app for finding the brr...fect ice cream cone! Built using Javascript, HTML, and CSS.',\n  url: 'https://danieldrojas.github.io/gt-freezER/',\n  github: 'https://github.com/bread-w/gt-freezER'\n},\n{\n  img: 'https://i.imgur.com/1vcUHLl.png',\n  title: 'Google Books Search',\n  info: 'The ideal app for searching and saving your favorite books. Built using React, MERN Stack, and MongoDB.',\n  url: 'https://bw-google-books.herokuapp.com/',\n  github: 'https://github.com/bread-w/gt-react-google-books'\n},\n{\n  img: 'https://i.imgur.com/zOghqES.png',\n  title: 'Employee Directory',\n  info: 'This app works great for buildin a sample employee directory! Built using React, and MongoDB.',\n  url: 'https://bread-w.github.io/gt-react-employee-directory/',\n  github: 'https://github.com/bread-w/gt-react-employee-directory'\n},\n{\n  img: \"https://i.imgur.com/xJfzzge.png\",\n  title: \"Burger Slam\",\n  info: \"Customize your dream burger using Burger Slam! Built using Handlebars, Express, and MySQL.\",\n  url: 'https://safe-atoll-10233.herokuapp.com/',\n  github: 'https://github.com/bread-w/gt-node-express-handlebars-hw'\n},\n{\n  img: \"https://i.imgur.com/CJ7PBrw.png\",\n  title: \"Team Builder\",\n  info: \"Build the software engineering team of your dreams! Built using OOP, CLI, and Node.js.\",\n  url: 'https://drive.google.com/file/d/1MQfRy_jNotHTjyn2HaJAmRANvUFG07DT/view',\n  github: 'https://github.com/bread-w/gt-oop-template-engine-hw'\n},\n{\n  img: \"https://i.imgur.com/dd9RLNC.png\",\n  title: \"Weather Tracker App\",\n  info: \"Check out this custom weather app for daily weather and upcoming forecasts! Built using APIs, Javascript, CSS, and HTML.\",\n  url: 'https://bread-w.github.io/gt-server-side-apis-hw/',\n  github: 'https://github.com/bread-w/gt-server-side-apis-hw'\n},\n{\n  img: 'https://i.imgur.com/ESteEXR.png',\n  title: 'Fitness Tracker',\n  info: 'Track your workouts and workout goals using this fitness tracker! Built using Mongoose ODM, IndexDB, and Javascript.',\n  url: 'https://gt-nosql-fitness-tracker-hw.herokuapp.com/?id=5f1f65dfdacd0d0017ecd165',\n  github: 'https://github.com/bread-w/gt-nosql-fitness-tracker-hw'\n},\n];\n\nexport default tileData;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport LanguageIcon from \"@material-ui/icons/Language\";\nimport tileData from \"./TileData\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n  }\n}));\n\nexport default function TitlebarGridList() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <GridList cellHeight={450} style={{margin: 10}}>\n        <GridListTile key=\"Subheader\" cols={2} style={{ height: \"auto\"}}>\n          <ListSubheader component=\"div\"></ListSubheader>\n        </GridListTile>\n        {tileData.map((tile) => (\n          <GridListTile key={tile.img} style={{padding: 10, color: \"rgb(55,71,79)\" }}>\n            <img src={tile.img} alt={tile.title} />\n            <GridListTileBar\n              title={tile.title}\n              subtitle={<span>{tile.info}</span>}\n              style={{padding: 10, backgroundColor: \"rgb(55,71,79)\"}}\n              actionIcon={\n                <IconButton\n                  aria-label={`info about ${tile.title}`}\n                >\n                  <a\n                    href={tile.url}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    style={{color: 'white', paddingRight: 25}}\n                  >\n                  <LanguageIcon />\n                  </a>\n                  <a\n                    href={tile.github}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    style={{color: 'white'}}\n                  >\n                    <GitHubIcon />\n                  </a>\n                </IconButton>\n              }\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>\n  );\n}\n","import React from \"react\";\nimport PortfolioBody from \"../components/PortfolioBody\";\n\nconst Portfolio = () => {\n  return (\n    <div>\n      <PortfolioBody />\n    </div>\n  );\n};\n\nexport default Portfolio;\n","import React from \"react\";\nimport {\n  makeStyles,\n  createMuiTheme,\n  ThemeProvider,\n} from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: \"#f05545\",\n      main: \"#b71c1c\",\n      dark: \"#7f0000\",\n      contrastText: \"#ffffff\",\n    },\n    secondary: {\n      light: \"#62727b\",\n      main: \"#37474f\",\n      dark: \"#102027\",\n      contrastText: \"#ffffff\",\n    },\n  },\n});\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 750,\n  },\n  large: {\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n  },\n});\n\nexport default function ImgMediaCard() {\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Box m={2} width={750} mx=\"auto\">\n        <Card className={classes.root}>\n          <CardActionArea>\n            <Avatar\n              alt=\"Brad Williams\"\n              src=\"https://i.imgur.com/7pmQ7Ft.jpg\"\n              className={classes.large}\n            />\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                James \"Brad\" Williams\n              </Typography>\n              <Typography variant=\"body1\" component=\"p\">\n                Please contact me via any of the options I've listed below. You\n                may also view my other qualifications on my LinkedIn page and\n                Resume by following the provided links in the navbar shown\n                above. Thank you for visiting my portfolio page and I look\n                forward to speaking soon! If you have an urgent matter, feel\n                free to contact me via email or on my cell.\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n          <CardActions>\n            <Button size=\"large\" color=\"primary\">\n              <a\n                href=\"https://docs.google.com/document/d/1z5g5z8KkijgM7MXMcTTAsrx6WvvyD2njZetimYtuIr8/edit?usp=sharing\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                View my Resume\n              </a>\n            </Button>\n            <Button size=\"large\" color=\"primary\">\n              <a href=\"mailto: jb.wms89@gmail.com\">jb.wms89@gmail.com</a>\n            </Button>\n            <Button size=\"large\" color=\"primary\">\n              <a href=\"tel:+14043761524\"> 404.376.1524</a>\n            </Button>\n          </CardActions>\n        </Card>\n      </Box>\n    </ThemeProvider>\n  );\n}\n","import React from \"react\";\nimport ContactBody from \"../components/ContactBody\";\n\nconst Contact = () => {\n  return (\n    <div>\n      <ContactBody />\n    </div>\n  );\n};\n\nexport default Contact;\n","import React from \"react\";\n\nconst Footer = () => {\n  const footerStyle = {\n    color: \"white\",\n  };\n  return (\n    <footer className=\"container\">\n      <nav\n        className=\"navbar fixed-bottom stickyFooter navbar-expand-lg\"\n        style={footerStyle}\n      >\n        <div\n          className=\"navbar-brand\"\n          style={{\n            backgroundColor: \"#37474f\",\n            padding: \"5px\",\n            borderRadius: \"5%\",\n            opacity: .5,\n            position: \"relative\"\n          }}\n        >\n          © 2020 Brad Williams\n        </div>\n      </nav>\n    </footer>\n  );\n};\nexport default Footer;\n","import React from \"react\";\nimport Nav from \"./components/Nav\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport About from \"./pages/About\";\nimport Portfolio from \"./pages/Portfolio\";\nimport Contact from \"./pages/Contact\";\nimport Footer from \"../src/components/Footer\"\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <div>\n          <Nav />\n          <Route exact path=\"/\" component={About} />\n          <Route exact path=\"/Portfolio\" component={Portfolio} />\n          <Route exact path=\"/Contact\" component={Contact} />\n        </div>\n      </Router>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}