{"version":3,"sources":["components/Nav.jsx","components/AboutBody.jsx","pages/About.jsx","components/TileData.jsx","components/TileDataCont.jsx","components/PortfolioBody.jsx","pages/Portfolio.jsx","components/ContactBody.jsx","pages/Contact.jsx","components/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["theme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","useStyles","makeStyles","root","flexGrow","title","ButtonAppBar","classes","navBar","color","float","textDecoration","ThemeProvider","AppBar","position","Toolbar","Typography","variant","className","to","Button","style","href","target","rel","fontSize","SimpleContainer","Fragment","Container","maxWidth","backgroundColor","marginTop","marginRight","width","height","borderRadius","src","alt","component","paddingTop","About","tileData","img","info","url","github","tileDataCont","display","flexWrap","justifyContent","overflow","gridList","icon","TitlebarGridList","GridList","cellHeight","GridListTile","key","cols","ListSubheader","map","tile","GridListTileBar","subtitle","actionIcon","IconButton","aria-label","Portfolio","large","spacing","ImgMediaCard","Box","m","mx","Card","CardActionArea","Avatar","CardContent","gutterBottom","CardActions","size","Contact","Footer","padding","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f3a4c8a5.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  makeStyles,\n  createMuiTheme,\n  ThemeProvider,\n} from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: \"#f05545\",\n      main: \"#b71c1c\",\n      dark: \"#7f0000\",\n      contrastText: \"#ffffff\",\n    },\n    secondary: {\n      light: \"#62727b\",\n      main: \"#37474f\",\n      dark: \"#102027\",\n      contrastText: \"#ffffff\",\n    },\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function ButtonAppBar() {\n  const classes = useStyles();\n  const navBar = {\n    color: \"white\",\n    float: \"right\",\n    textDecoration: \"underline\",\n  };\n  return (\n    <ThemeProvider theme={theme}>\n      <div>\n        <AppBar position=\"static\" color=\"primary\">\n          <Toolbar>\n            <Typography variant=\"h3\" className={classes.title}>\n              Brad Williams\n            </Typography>\n            <Typography variant=\"h6\" className={classes.title}>\n              <Link to=\"/\">\n                <Button style={navBar}>About</Button>\n              </Link>\n            </Typography>\n            <Typography variant=\"h6\" className={classes.title}>\n              <Link to=\"/Portfolio\">\n                <Button style={navBar}>Portfolio</Button>\n              </Link>\n            </Typography>\n            <Typography variant=\"h6\" className={classes.title}>\n              <Link to=\"/Contact\">\n                <Button style={navBar}>Contact</Button>\n              </Link>\n            </Typography>\n            <div>\n              <a\n                href=\"https://github.com/bread-w\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <Button style={navBar}>\n                  <GitHubIcon fontSize=\"large\" />\n                </Button>\n              </a>\n            </div>\n            <div>\n              <a\n                href=\"https://www.linkedin.com/in/brad-williams-79674253/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <Button style={navBar}>\n                  <LinkedInIcon fontSize=\"large\" />\n                </Button>\n              </a>\n            </div>\n          </Toolbar>\n        </AppBar>\n      </div>\n    </ThemeProvider>\n  );\n}\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\n\nexport default function SimpleContainer() {\n  const bioStyle = {\n    float: \"left\",\n    marginRight: \"20px\",\n    width: \"250px\",\n    height: \"auto\",\n    marginTop: \"10px\",\n    borderRadius: \"5%\",\n  };\n  return (\n    <React.Fragment>\n      <Container\n        maxWidth=\"lg\"\n        style={{\n          backgroundColor: \"#37474f\",\n          marginTop: \"20px\",\n        }}\n      >\n        <img\n          style={bioStyle}\n          src=\"https://i.imgur.com/7pmQ7Ft.jpg\"\n          alt=\"Brad Williams\"\n        />\n        <Typography variant=\"h5\" component=\"h6\" style={{ color: \"white\", paddingTop: \"10px\" }}>\n          Full stack web developer with 4 years of managing small to medium\n          sized teams between 5 and 30+ members in a startup environment. Former\n          math teacher in an English as a second language classroom with vast\n          experience planning differentiated lessons and activities through\n          student data and achievement in both Spanish and English. Reliable,\n          consistent and amiable as both a teammate and leader, preferring an\n          action oriented approach in both professional and personal life.\n          Familiar with fast paced work environments, working with and managing\n          diverse and dynamic teams, and meeting deadlines with no sacrifice to\n          the final quality of deliverables, be it a product or service.\n          <br></br>\n          <br></br>\n          Certified in Full Stack Web Development through Georgia Tech, with a\n          primary focus in Javascript applications, REST APIs, Node, MySQL,\n          MongoDB and React. Once hired, easily integrates into existing teams\n          and quickly learns the established best practices with the necessary\n          developmental and project management tools.\n        </Typography>\n      </Container>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport AboutBody from \"../components/AboutBody\";\n\nconst About = () => {\n  return (\n    <div>\n      <AboutBody />\n    </div>\n  );\n};\n\nexport default About;\n","const tileData = [{\n  img: 'https://i.imgur.com/UQW4MRc.png',\n  title: 'PokeTrader',\n  info: 'Node.js, MySQL, Axios.js',\n  url: 'https://gt-poketrader.herokuapp.com/',\n  github: 'https://github.com/bread-w/poketrader-app'\n},\n{\n  img: 'https://i.imgur.com/zHJX2sv.png',\n  title: 'freezER',\n  info: 'Javascript, HTML, CSS',\n  url: 'https://danieldrojas.github.io/gt-freezER/',\n  github: 'https://github.com/bread-w/gt-freezER'\n},\n{\n  img: 'https://i.imgur.com/1vcUHLl.png',\n  title: 'Google Books Search',\n  info: 'React, MERN, MongoDB',\n  url: 'https://bw-google-books.herokuapp.com/',\n  github: 'https://github.com/bread-w/gt-react-google-books'\n},\n{\n  img: 'https://i.imgur.com/zOghqES.png',\n  title: 'Employee Directory',\n  info: 'React, MongoDB, Axios.js',\n  url: 'https://bread-w.github.io/gt-react-employee-directory/',\n  github: 'https://github.com/bread-w/gt-react-employee-directory'\n},\n];\n\nexport default tileData;\n","const tileDataCont = [\n  {\n    img: \"https://i.imgur.com/xJfzzge.png\",\n    title: \"Burger Slam\",\n    info: \"Handlebars, Express, MySQL\",\n    url: 'https://safe-atoll-10233.herokuapp.com/',\n    github: 'https://github.com/bread-w/gt-node-express-handlebars-hw'\n  },\n  {\n    img: \"https://i.imgur.com/CJ7PBrw.png\",\n    title: \"Team Builder\",\n    info: \"OOP, CLI, Node.js\",\n    url: 'https://drive.google.com/file/d/1MQfRy_jNotHTjyn2HaJAmRANvUFG07DT/view',\n    github: 'https://github.com/bread-w/gt-oop-template-engine-hw'\n  },\n  {\n    img: \"https://i.imgur.com/dd9RLNC.png\",\n    title: \"Weather Tracker App\",\n    info: \"API, Javascript, CSS, HTML\",\n    url: 'https://bread-w.github.io/gt-server-side-apis-hw/',\n    github: 'https://github.com/bread-w/gt-server-side-apis-hw'\n  },\n  {\n    img: 'https://i.imgur.com/ESteEXR.png',\n    title: 'Fitness Tracker',\n    info: 'Mongoose ODM, IndexDB, Javascript',\n    url: 'https://gt-nosql-fitness-tracker-hw.herokuapp.com/?id=5f1f65dfdacd0d0017ecd165',\n    github: 'https://github.com/bread-w/gt-nosql-fitness-tracker-hw'\n  },\n];\n\nexport default tileDataCont;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport LanguageIcon from \"@material-ui/icons/Language\";\nimport tileData from \"./TileData\";\nimport tileDataCont from \"./TileDataCont\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n  },\n  gridList: {\n    width: 500,\n    height: 450,\n  },\n  icon: {\n    color: \"rgba(255, 255, 255, 0.54)\",\n  },\n}));\n\nexport default function TitlebarGridList() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <GridList cellHeight={180} className={classes.gridList}>\n        <GridListTile key=\"Subheader\" cols={2} style={{ height: \"auto\" }}>\n          <ListSubheader component=\"div\"></ListSubheader>\n        </GridListTile>\n        {tileData.map((tile) => (\n          <GridListTile key={tile.img}>\n            <img src={tile.img} alt={tile.title} />\n            <GridListTileBar\n              title={tile.title}\n              subtitle={<span>{tile.info}</span>}\n              actionIcon={\n                <IconButton\n                  aria-label={`info about ${tile.title}`}\n                  className={classes.icon}\n                >\n                  <a\n                    href={tile.url}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    style={{color: 'white'}}\n                  >\n                  <LanguageIcon />\n                  </a>\n                  <a\n                    href={tile.github}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    style={{color: 'white'}}\n                  >\n                    <GitHubIcon />\n                  </a>\n                </IconButton>\n              }\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n      <GridList cellHeight={180} className={classes.gridList}>\n        <GridListTile key=\"Subheader\" cols={2} style={{ height: \"auto\" }}>\n          <ListSubheader component=\"div\"></ListSubheader>\n        </GridListTile>\n        {tileDataCont.map((tile) => (\n          <GridListTile key={tile.img}>\n            <img src={tile.img} alt={tile.title} />\n            <GridListTileBar\n              title={tile.title}\n              subtitle={<span>{tile.info}</span>}\n              actionIcon={\n                <IconButton\n                  aria-label={`info about ${tile.title}`}\n                  className={classes.icon}\n                >\n                  <a\n                    href={tile.url}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    style={{color: 'white'}}\n                  >\n                  <LanguageIcon />\n                  </a>\n                  <a\n                    href={tile.github}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    style={{color: 'white'}}\n                  >\n                    <GitHubIcon />\n                  </a>\n                </IconButton>\n              }\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>\n  );\n}\n","import React from \"react\";\nimport PortfolioBody from \"../components/PortfolioBody\";\n\nconst Portfolio = () => {\n  return (\n    <div>\n      <PortfolioBody />\n    </div>\n  );\n};\n\nexport default Portfolio;\n","import React from \"react\";\nimport {\n  makeStyles,\n  createMuiTheme,\n  ThemeProvider,\n} from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: \"#f05545\",\n      main: \"#b71c1c\",\n      dark: \"#7f0000\",\n      contrastText: \"#ffffff\",\n    },\n    secondary: {\n      light: \"#62727b\",\n      main: \"#37474f\",\n      dark: \"#102027\",\n      contrastText: \"#ffffff\",\n    },\n  },\n});\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 750,\n  },\n  large: {\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n  },\n});\n\nexport default function ImgMediaCard() {\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Box m={2} width={750} mx=\"auto\">\n        <Card className={classes.root}>\n          <CardActionArea>\n            <Avatar\n              alt=\"Brad Williams\"\n              src=\"https://i.imgur.com/7pmQ7Ft.jpg\"\n              className={classes.large}\n            />\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                James \"Brad\" Williams\n              </Typography>\n              <Typography variant=\"body1\" component=\"p\">\n                Please contact me via any of the options I've listed below. You\n                may also view my other qualifications on my LinkedIn page and\n                Resume by following the provided links in the navbar shown\n                above. Thank you for visiting my portfolio page and I look\n                forward to speaking soon! If you have an urgent matter, feel\n                free to contact me via email or on my cell.\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n          <CardActions>\n            <Button size=\"large\" color=\"primary\">\n              <a\n                href=\"https://docs.google.com/document/d/1RcjhjXo1_0ogXtvjdYHrZ7U78nBEPwMM7ilpicaMSUg/edit\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                View my Resume\n              </a>\n            </Button>\n            <Button size=\"large\" color=\"primary\">\n              <a href=\"mailto: jb.wms89@gmail.com\">Email</a>\n            </Button>\n            <Button size=\"large\" color=\"primary\">\n              <a href=\"tel:+14043761524\"> 404.376.1524</a>\n            </Button>\n          </CardActions>\n        </Card>\n      </Box>\n    </ThemeProvider>\n  );\n}\n","import React from \"react\";\nimport ContactBody from \"../components/ContactBody\";\n\nconst Contact = () => {\n  return (\n    <div>\n      <ContactBody />\n    </div>\n  );\n};\n\nexport default Contact;\n","import React from \"react\";\n\nconst Footer = () => {\n  const footerStyle = {\n    color: \"white\",\n  };\n  return (\n    <footer className=\"container\">\n      <nav\n        className=\"navbar fixed-bottom stickyFooter navbar-expand-lg\"\n        style={footerStyle}\n      >\n        <div\n          className=\"navbar-brand\"\n          style={{\n            backgroundColor: \"#37474f\",\n            padding: \"5px\",\n            borderRadius: \"5%\",\n          }}\n        >\n          © 2020 Brad Williams\n        </div>\n      </nav>\n    </footer>\n  );\n};\nexport default Footer;\n","import React from \"react\";\nimport Nav from \"./components/Nav\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport About from \"./pages/About\";\nimport Portfolio from \"./pages/Portfolio\";\nimport Contact from \"./pages/Contact\";\nimport Footer from \"../src/components/Footer\"\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <div>\n          <Nav />\n          <Route exact path=\"/\" component={About} />\n          <Route exact path=\"/Portfolio\" component={Portfolio} />\n          <Route exact path=\"/Contact\" component={Contact} />\n        </div>\n      </Router>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}