{"version":3,"sources":["components/Nav.jsx","components/AboutBody.jsx","pages/About.jsx","components/TileData.jsx","components/TileDataCont.jsx","components/PortfolioBody.jsx","pages/Portfolio.jsx","components/ContactBody.jsx","pages/Contact.jsx","App.js","serviceWorker.js","index.js"],"names":["theme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","useStyles","makeStyles","root","flexGrow","title","ButtonAppBar","classes","navBar","color","float","textDecoration","ThemeProvider","AppBar","position","Toolbar","Typography","variant","className","to","Button","style","href","target","rel","fontSize","SimpleContainer","Fragment","Container","maxWidth","backgroundColor","marginTop","marginRight","width","height","src","alt","component","About","tileData","img","info","github","tileDataCont","display","flexWrap","justifyContent","overflow","gridList","icon","TitlebarGridList","GridList","cellHeight","GridListTile","key","cols","ListSubheader","map","tile","GridListTileBar","subtitle","actionIcon","IconButton","aria-label","Portfolio","large","spacing","ImgMediaCard","Box","m","mx","Card","CardActionArea","Avatar","CardContent","gutterBottom","CardActions","size","Contact","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ad83c57c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  makeStyles,\r\n  createMuiTheme,\r\n  ThemeProvider,\r\n} from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: \"#f05545\",\r\n      main: \"#b71c1c\",\r\n      dark: \"#7f0000\",\r\n      contrastText: \"#ffffff\",\r\n    },\r\n    secondary: {\r\n      light: \"#62727b\",\r\n      main: \"#37474f\",\r\n      dark: \"#102027\",\r\n      contrastText: \"#ffffff\",\r\n    },\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function ButtonAppBar() {\r\n  const classes = useStyles();\r\n  const navBar = {\r\n    color: \"white\",\r\n    float: \"right\",\r\n    textDecoration: \"underline\",\r\n  };\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <div>\r\n        <AppBar position=\"static\" color=\"primary\">\r\n          <Toolbar>\r\n            <Typography variant=\"h3\" className={classes.title}>\r\n              Brad Williams\r\n            </Typography>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              <Link to=\"/bw-react-portfolio\">\r\n                <Button style={navBar}>About</Button>\r\n              </Link>\r\n            </Typography>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              <Link to=\"/Portfolio\">\r\n                <Button style={navBar}>Portfolio</Button>\r\n              </Link>\r\n            </Typography>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              <Link to=\"/Contact\">\r\n                <Button style={navBar}>Contact</Button>\r\n              </Link>\r\n            </Typography>\r\n            <div>\r\n              <a\r\n                href=\"https://github.com/bread-w\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                <Button style={navBar}>\r\n                  <GitHubIcon fontSize=\"large\" />\r\n                </Button>\r\n              </a>\r\n            </div>\r\n            <div>\r\n              <a\r\n                href=\"https://www.linkedin.com/in/brad-williams-79674253/\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                <Button style={navBar}>\r\n                  <LinkedInIcon fontSize=\"large\" />\r\n                </Button>\r\n              </a>\r\n            </div>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nexport default function SimpleContainer() {\r\n  const bioStyle = {\r\n    float: \"left\",\r\n    marginRight: \"20px\",\r\n    width: \"250px\",\r\n    height: \"auto\",\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Container\r\n        maxWidth=\"lg\"\r\n        style={{ backgroundColor: \"#37474f\", marginTop: \"20px\" }}\r\n      >\r\n        <img\r\n          style={bioStyle}\r\n          src=\"https://i.imgur.com/7pmQ7Ft.jpg\"\r\n          alt=\"Brad Williams\"\r\n        />\r\n        <Typography\r\n          variant=\"subtitle1\"\r\n          component=\"subtitle1\"\r\n          style={{ color: \"white\" }}\r\n        >\r\n          Hello there, and thanks for stopping by! My name is Brad Williams and\r\n          I was born and raised right here in Atlanta, Ga. I graduated from high\r\n          school in 2008, where I then went on to study Spanish at Auburn\r\n          University. War Eagle! After graduation, I taught Spanish for 2 years\r\n          in Atlanta, and then picked up my things and moved a few thousand\r\n          miles south to Santiago, Chile! While in Chile, I taught English to\r\n          both children and adults, improving both my Spanish language skills\r\n          and broadening my cultural perspective. While it was at times jarring,\r\n          I loved my time in Chile, the people I met and the experiences I\r\n          gained while living there. After a year, I decided to head back to the\r\n          U.S. where I would go on to work for Teach for America in Denver,\r\n          Colorado. In Denver, I taught math in an English as a second language\r\n          classroom to first generation hispanic immigrants.\r\n          <br />\r\n          <br />\r\n          In 2017, I decided that I no longer wanted to pursue a career in\r\n          teaching, mainly because of the sheer lack of financial growth\r\n          available for most long term teachers. I then moved back to Atlanta\r\n          and began working at a coworking startup, SharedSpace, at the peak of\r\n          the coworking bubble. I started as General Manager, and after bringing\r\n          a space to profitability, I then went on to open two more spaces, one\r\n          in Cobb County and another in Augusta, Ga. While working at\r\n          SharedSpace, I hosted a coding bootcamp, which sparked an interest in\r\n          coding that would stick with me until today. I worked for SharedSpace\r\n          for 2 years. While opening the SharedSpace location in Augusta, I was\r\n          approached about a position with a startup concept called Kefi, which\r\n          I decided to follow, yet again bringing me back to Atlanta. At Kefi, I\r\n          was very quickly promoted to manager, but as is the nature of\r\n          startups, it came with its own set of challenges, and ended up not\r\n          being the right fit for me.\r\n          <br />\r\n          <br />\r\n          I’m now working full time as a student at the Georgia Tech Coding\r\n          bootcamp following my dream of becoming a developer. While not coding,\r\n          I love to play video games, cook, watch movies, and spend time with my\r\n          girlfriend and pets. I love learning foreign languages and I speak\r\n          spanish at an advanced level, and I’m hoping to add a few coding\r\n          languages to my belt as well!\r\n        </Typography>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport AboutBody from \"../components/AboutBody\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <AboutBody />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","const tileData = [{\r\n  img: 'https://i.imgur.com/UQW4MRc.png',\r\n  title: 'PokeTrader',\r\n  info: 'Axios, Node, MySQL, Handlebars',\r\n  github: 'https://github.com/bread-w/poketrader-app'\r\n},\r\n{\r\n  img: 'https://i.imgur.com/zHJX2sv.png',\r\n  title: 'freezER',\r\n  info: 'Javascript, API',\r\n  github: 'https://github.com/bread-w/gt-freezER'\r\n},\r\n{\r\n  img: 'https://i.imgur.com/zOghqES.png',\r\n  title: 'Employee Directory',\r\n  info: 'React, MongoDB, Axios',\r\n  github: 'https://github.com/bread-w/gt-react-employee-directory'\r\n},\r\n{\r\n  img: 'https://i.imgur.com/ESteEXR.png',\r\n  title: 'Fitness Tracker',\r\n  info: 'Mongoose, IndexDB, Javascript',\r\n  github: 'https://github.com/bread-w/gt-nosql-fitness-tracker-hw'\r\n},\r\n];\r\n\r\nexport default tileData;\r\n","const tileDataCont = [\r\n  {\r\n    img: \"https://i.imgur.com/xJfzzge.png\",\r\n    title: \"Burger Slam\",\r\n    info: \"Handlebars, Express, MySQL\",\r\n    github: 'https://github.com/bread-w/gt-node-express-handlebars-hw'\r\n  },\r\n  {\r\n    img: \"https://i.imgur.com/CJ7PBrw.png\",\r\n    title: \"Team Builder\",\r\n    info: \"OOP, CLI, Node, Inquirer\",\r\n    github: 'https://github.com/bread-w/gt-oop-template-engine-hw'\r\n  },\r\n  {\r\n    img: \"https://i.imgur.com/dd9RLNC.png\",\r\n    title: \"Weather Tracker App\",\r\n    info: \"API, Javascript, CSS, HTML\",\r\n    github: 'https://github.com/bread-w/gt-server-side-apis-hw'\r\n  },\r\n];\r\n\r\nexport default tileDataCont;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport tileData from \"./TileData\";\r\nimport tileDataCont from \"./TileDataCont\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    overflow: \"hidden\",\r\n  },\r\n  gridList: {\r\n    width: 500,\r\n    height: 450,\r\n  },\r\n  icon: {\r\n    color: \"rgba(255, 255, 255, 0.54)\",\r\n  },\r\n}));\r\n\r\nexport default function TitlebarGridList() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <GridList cellHeight={180} className={classes.gridList}>\r\n        <GridListTile key=\"Subheader\" cols={2} style={{ height: \"auto\" }}>\r\n          <ListSubheader component=\"div\"></ListSubheader>\r\n        </GridListTile>\r\n        {tileData.map((tile) => (\r\n          <GridListTile key={tile.img}>\r\n            <img src={tile.img} alt={tile.title} />\r\n            <GridListTileBar\r\n              title={tile.title}\r\n              subtitle={<span>{tile.info}</span>}\r\n              actionIcon={\r\n                <a\r\n                  href={tile.github}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  <IconButton\r\n                    aria-label={`info about ${tile.title}`}\r\n                    className={classes.icon}\r\n                  >\r\n                    <GitHubIcon />\r\n                  </IconButton>\r\n                </a>\r\n              }\r\n            />\r\n          </GridListTile>\r\n        ))}\r\n      </GridList>\r\n      <GridList cellHeight={180} className={classes.gridList}>\r\n        <GridListTile key=\"Subheader\" cols={2} style={{ height: \"auto\" }}>\r\n          <ListSubheader component=\"div\"></ListSubheader>\r\n        </GridListTile>\r\n        {tileDataCont.map((tile) => (\r\n          <GridListTile key={tile.img}>\r\n            <img src={tile.img} alt={tile.title} />\r\n            <GridListTileBar\r\n              title={tile.title}\r\n              subtitle={<span>{tile.info}</span>}\r\n              actionIcon={\r\n                <IconButton\r\n                  aria-label={`info about ${tile.title}`}\r\n                  className={classes.icon}\r\n                >\r\n                  <GitHubIcon />\r\n                </IconButton>\r\n              }\r\n            />\r\n          </GridListTile>\r\n        ))}\r\n      </GridList>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PortfolioBody from \"../components/PortfolioBody\";\r\n\r\nconst Portfolio = () => {\r\n  return (\r\n    <div>\r\n      <PortfolioBody />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Portfolio;\r\n","import React from \"react\";\r\nimport {\r\n  makeStyles,\r\n  createMuiTheme,\r\n  ThemeProvider,\r\n} from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: \"#f05545\",\r\n      main: \"#b71c1c\",\r\n      dark: \"#7f0000\",\r\n      contrastText: \"#ffffff\",\r\n    },\r\n    secondary: {\r\n      light: \"#62727b\",\r\n      main: \"#37474f\",\r\n      dark: \"#102027\",\r\n      contrastText: \"#ffffff\",\r\n    },\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 750,\r\n  },\r\n  large: {\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n  },\r\n});\r\n\r\nexport default function ImgMediaCard() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Box m={2} width={750} mx=\"auto\">\r\n        <Card className={classes.root}>\r\n          <CardActionArea>\r\n            <Avatar\r\n              alt=\"Brad Williams\"\r\n              src=\"https://i.imgur.com/7pmQ7Ft.jpg\"\r\n              className={classes.large}\r\n            />\r\n            <CardContent>\r\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                James \"Brad\" Williams\r\n              </Typography>\r\n              <Typography variant=\"body2\" component=\"p\">\r\n                Please contact me via any of the options I've listed below. You\r\n                may also view my other qualifications on my LinkedIn page and\r\n                Resume by following the provided links in the navbar shown\r\n                above. Thank you for visiting my portfolio page and I look\r\n                forward to speaking soon! If you have an urgent matter, feel\r\n                free to contact me via email or on my cell.\r\n              </Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n          <CardActions>\r\n            <Button size=\"large\" color=\"primary\">\r\n              <a\r\n                href=\"https://docs.google.com/document/d/1RcjhjXo1_0ogXtvjdYHrZ7U78nBEPwMM7ilpicaMSUg/edit\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                View my Resume\r\n              </a>\r\n            </Button>\r\n            <Button size=\"large\" color=\"primary\">\r\n              <a href=\"mailto: jb.wms89@gmail.com\">Email</a>\r\n            </Button>\r\n            <Button size=\"large\" color=\"primary\">\r\n              <a href=\"tel:+14043761524\"> 404.376.1524</a>\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </Box>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ContactBody from \"../components/ContactBody\";\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <div>\r\n      <ContactBody />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import React from \"react\";\nimport Nav from \"./components/Nav\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport About from \"./pages/About\";\nimport Portfolio from \"./pages/Portfolio\";\nimport Contact from \"./pages/Contact\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <div>\n          <Nav />\n          <Route exact path=\"/bw-react-portfolio\" component={About} />\n          <Route exact path=\"/Portfolio\" component={Portfolio} />\n          <Route exact path=\"/Contact\" component={Contact} />\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}